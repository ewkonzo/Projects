//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Rice.Alternate {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Alternate_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/Alternate")]
    public partial class Alternate : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CompanyimagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCustomerImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetcontactImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerpaddyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerbalOperationCompleted;
        
        private System.Threading.SendOrPostCallback PosthandlingChargesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ItemStockBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostinventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrentseasonOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Alternate() {
            this.Url = global::Rice.Properties.Settings.Default.Rice_Alternate_Alternate;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CompanyimagesCompletedEventHandler CompanyimagesCompleted;
        
        /// <remarks/>
        public event GetCustomerImageCompletedEventHandler GetCustomerImageCompleted;
        
        /// <remarks/>
        public event SetCustomerImageCompletedEventHandler SetCustomerImageCompleted;
        
        /// <remarks/>
        public event SetcontactImageCompletedEventHandler SetcontactImageCompleted;
        
        /// <remarks/>
        public event CustomerpaddyCompletedEventHandler CustomerpaddyCompleted;
        
        /// <remarks/>
        public event CustomerbalCompletedEventHandler CustomerbalCompleted;
        
        /// <remarks/>
        public event PosthandlingChargesCompletedEventHandler PosthandlingChargesCompleted;
        
        /// <remarks/>
        public event ItemStockBalanceCompletedEventHandler ItemStockBalanceCompleted;
        
        /// <remarks/>
        public event PostinventoryCompletedEventHandler PostinventoryCompleted;
        
        /// <remarks/>
        public event CurrentseasonCompletedEventHandler CurrentseasonCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Alternate:Companyimages", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", ResponseElementName="Companyimages_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Companyimages(ref string picture) {
            object[] results = this.Invoke("Companyimages", new object[] {
                        picture});
            picture = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CompanyimagesAsync(string picture) {
            this.CompanyimagesAsync(picture, null);
        }
        
        /// <remarks/>
        public void CompanyimagesAsync(string picture, object userState) {
            if ((this.CompanyimagesOperationCompleted == null)) {
                this.CompanyimagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompanyimagesOperationCompleted);
            }
            this.InvokeAsync("Companyimages", new object[] {
                        picture}, this.CompanyimagesOperationCompleted, userState);
        }
        
        private void OnCompanyimagesOperationCompleted(object arg) {
            if ((this.CompanyimagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompanyimagesCompleted(this, new CompanyimagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Alternate:GetCustomerImage", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", ResponseElementName="GetCustomerImage_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetCustomerImage(string no, ref string picture) {
            object[] results = this.Invoke("GetCustomerImage", new object[] {
                        no,
                        picture});
            picture = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerImageAsync(string no, string picture) {
            this.GetCustomerImageAsync(no, picture, null);
        }
        
        /// <remarks/>
        public void GetCustomerImageAsync(string no, string picture, object userState) {
            if ((this.GetCustomerImageOperationCompleted == null)) {
                this.GetCustomerImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerImageOperationCompleted);
            }
            this.InvokeAsync("GetCustomerImage", new object[] {
                        no,
                        picture}, this.GetCustomerImageOperationCompleted, userState);
        }
        
        private void OnGetCustomerImageOperationCompleted(object arg) {
            if ((this.GetCustomerImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerImageCompleted(this, new GetCustomerImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Alternate:SetCustomerImage", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", ResponseElementName="SetCustomerImage_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetCustomerImage(string no, string picture) {
            this.Invoke("SetCustomerImage", new object[] {
                        no,
                        picture});
        }
        
        /// <remarks/>
        public void SetCustomerImageAsync(string no, string picture) {
            this.SetCustomerImageAsync(no, picture, null);
        }
        
        /// <remarks/>
        public void SetCustomerImageAsync(string no, string picture, object userState) {
            if ((this.SetCustomerImageOperationCompleted == null)) {
                this.SetCustomerImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCustomerImageOperationCompleted);
            }
            this.InvokeAsync("SetCustomerImage", new object[] {
                        no,
                        picture}, this.SetCustomerImageOperationCompleted, userState);
        }
        
        private void OnSetCustomerImageOperationCompleted(object arg) {
            if ((this.SetCustomerImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCustomerImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Alternate:SetcontactImage", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", ResponseElementName="SetcontactImage_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetcontactImage(string no, string picture) {
            this.Invoke("SetcontactImage", new object[] {
                        no,
                        picture});
        }
        
        /// <remarks/>
        public void SetcontactImageAsync(string no, string picture) {
            this.SetcontactImageAsync(no, picture, null);
        }
        
        /// <remarks/>
        public void SetcontactImageAsync(string no, string picture, object userState) {
            if ((this.SetcontactImageOperationCompleted == null)) {
                this.SetcontactImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetcontactImageOperationCompleted);
            }
            this.InvokeAsync("SetcontactImage", new object[] {
                        no,
                        picture}, this.SetcontactImageOperationCompleted, userState);
        }
        
        private void OnSetcontactImageOperationCompleted(object arg) {
            if ((this.SetcontactImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetcontactImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Alternate:Customerpaddy", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", ResponseElementName="Customerpaddy_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal Customerpaddy(string no) {
            object[] results = this.Invoke("Customerpaddy", new object[] {
                        no});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerpaddyAsync(string no) {
            this.CustomerpaddyAsync(no, null);
        }
        
        /// <remarks/>
        public void CustomerpaddyAsync(string no, object userState) {
            if ((this.CustomerpaddyOperationCompleted == null)) {
                this.CustomerpaddyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerpaddyOperationCompleted);
            }
            this.InvokeAsync("Customerpaddy", new object[] {
                        no}, this.CustomerpaddyOperationCompleted, userState);
        }
        
        private void OnCustomerpaddyOperationCompleted(object arg) {
            if ((this.CustomerpaddyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerpaddyCompleted(this, new CustomerpaddyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Alternate:Customerbal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", ResponseElementName="Customerbal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal Customerbal(string no) {
            object[] results = this.Invoke("Customerbal", new object[] {
                        no});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerbalAsync(string no) {
            this.CustomerbalAsync(no, null);
        }
        
        /// <remarks/>
        public void CustomerbalAsync(string no, object userState) {
            if ((this.CustomerbalOperationCompleted == null)) {
                this.CustomerbalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerbalOperationCompleted);
            }
            this.InvokeAsync("Customerbal", new object[] {
                        no}, this.CustomerbalOperationCompleted, userState);
        }
        
        private void OnCustomerbalOperationCompleted(object arg) {
            if ((this.CustomerbalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerbalCompleted(this, new CustomerbalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Alternate:PosthandlingCharges", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", ResponseElementName="PosthandlingCharges_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PosthandlingCharges() {
            this.Invoke("PosthandlingCharges", new object[0]);
        }
        
        /// <remarks/>
        public void PosthandlingChargesAsync() {
            this.PosthandlingChargesAsync(null);
        }
        
        /// <remarks/>
        public void PosthandlingChargesAsync(object userState) {
            if ((this.PosthandlingChargesOperationCompleted == null)) {
                this.PosthandlingChargesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPosthandlingChargesOperationCompleted);
            }
            this.InvokeAsync("PosthandlingCharges", new object[0], this.PosthandlingChargesOperationCompleted, userState);
        }
        
        private void OnPosthandlingChargesOperationCompleted(object arg) {
            if ((this.PosthandlingChargesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PosthandlingChargesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Alternate:ItemStockBalance", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", ResponseElementName="ItemStockBalance_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal ItemStockBalance(string item, string variant, string location) {
            object[] results = this.Invoke("ItemStockBalance", new object[] {
                        item,
                        variant,
                        location});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void ItemStockBalanceAsync(string item, string variant, string location) {
            this.ItemStockBalanceAsync(item, variant, location, null);
        }
        
        /// <remarks/>
        public void ItemStockBalanceAsync(string item, string variant, string location, object userState) {
            if ((this.ItemStockBalanceOperationCompleted == null)) {
                this.ItemStockBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnItemStockBalanceOperationCompleted);
            }
            this.InvokeAsync("ItemStockBalance", new object[] {
                        item,
                        variant,
                        location}, this.ItemStockBalanceOperationCompleted, userState);
        }
        
        private void OnItemStockBalanceOperationCompleted(object arg) {
            if ((this.ItemStockBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ItemStockBalanceCompleted(this, new ItemStockBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Alternate:Postinventory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", ResponseElementName="Postinventory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Postinventory() {
            this.Invoke("Postinventory", new object[0]);
        }
        
        /// <remarks/>
        public void PostinventoryAsync() {
            this.PostinventoryAsync(null);
        }
        
        /// <remarks/>
        public void PostinventoryAsync(object userState) {
            if ((this.PostinventoryOperationCompleted == null)) {
                this.PostinventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostinventoryOperationCompleted);
            }
            this.InvokeAsync("Postinventory", new object[0], this.PostinventoryOperationCompleted, userState);
        }
        
        private void OnPostinventoryOperationCompleted(object arg) {
            if ((this.PostinventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostinventoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Alternate:Currentseason", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", ResponseElementName="Currentseason_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Alternate", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Currentseason() {
            object[] results = this.Invoke("Currentseason", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CurrentseasonAsync() {
            this.CurrentseasonAsync(null);
        }
        
        /// <remarks/>
        public void CurrentseasonAsync(object userState) {
            if ((this.CurrentseasonOperationCompleted == null)) {
                this.CurrentseasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrentseasonOperationCompleted);
            }
            this.InvokeAsync("Currentseason", new object[0], this.CurrentseasonOperationCompleted, userState);
        }
        
        private void OnCurrentseasonOperationCompleted(object arg) {
            if ((this.CurrentseasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrentseasonCompleted(this, new CurrentseasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CompanyimagesCompletedEventHandler(object sender, CompanyimagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompanyimagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompanyimagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string picture {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCustomerImageCompletedEventHandler(object sender, GetCustomerImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string picture {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetCustomerImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetcontactImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CustomerpaddyCompletedEventHandler(object sender, CustomerpaddyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerpaddyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerpaddyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CustomerbalCompletedEventHandler(object sender, CustomerbalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerbalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerbalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void PosthandlingChargesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ItemStockBalanceCompletedEventHandler(object sender, ItemStockBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ItemStockBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ItemStockBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void PostinventoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CurrentseasonCompletedEventHandler(object sender, CurrentseasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrentseasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrentseasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591